name: $(Date:yyyyMMddhhmm)-$(Rev:r)

trigger:
  - VIH-8960-sds-release

pr: none

resources:
  repositories:
    - repository: azTemplates
      type: github
      name: hmcts/azure-devops-templates
      ref: master
      endpoint: hmcts

parameters:
- name: environment
  type: object
  default:
  - Dev
  - Demo
  - Staging

#####################################################
# Generate Entity Framework Script. #################

stages:
  - stage: Generate_Entity_Framework_Script
    displayName: Generate Entity Framework Script
    variables:
      - template: variables/shared.yaml
      - ${{ if contains(variables['Build.SourceBranch'], 'refs/heads/release') }}:
        - template: variables/production.yaml
      - ${{ else }}:
        - template: variables/staging.yaml
    jobs:
      - job: Generate_Entity_Framework_Script
        displayName: "Generate Entity Framework Script"
        steps:
        - template: templates/Database/EntityFramework/generate-script.yaml@azTemplates
          parameters:
            outputPath: $(Build.StagingDirectory)
            contextName: ${{ variables.efContextName }}
            workingPath: $(System.DefaultWorkingDirectory)/BookingsApi/BookingsApi
            projectName: ${{ variables.efProjectName }}

        - task: PublishPipelineArtifact@1
          displayName: Publish Artifacts
          inputs:
            targetPath: $(Build.StagingDirectory)
            publishLocation: Pipeline
            artifact: ${{ variables.efContextName }}-$(Build.BuildId)


#####################################################
# Run Entity Framework Staging. #####################

  - stage: Approve_Entity_Framework_Staging
    condition: eq(variables['Build.SourceBranchName'], 'VIH-8960-sds-release')
    displayName: 'Entity Framework Staging'
    pool:
      vmImage: 'ubuntu-latest'
    jobs:
      - job: waitForValidation
        displayName: 'Approve Entity Framework Staging'
        pool: server
        timeoutInMinutes: 4320 # job times out in 3 days
        steps:
        - task: ManualValidation@0
          timeoutInMinutes: 1440 # task times out in 1 day
          inputs:
            instructions: 'Please Approve to Run Entity Framework in the Staging Environment...'
            onTimeout: 'reject'

  - ${{ each env in parameters.environment }}:
    - stage: Run_Entity_Framework_${{ env }}
      condition: eq(variables['Build.SourceBranchName'], 'VIH-8960-sds-release')
      dependsOn: Approve_Entity_Framework_Staging
      displayName: Run Entity Framework ${{ env }}
      variables:
      - ${{ if eq(env, 'Dev') }}:
        - template: variables/dev.yaml
      - ${{ if eq(env, 'Staging') }}:
        - template: variables/staging.yaml
      - ${{ if eq(env, 'Demo') }}:
        - template: variables/qa.yaml
      - template: variables/shared.yaml
        parameters:
          env: ${{ variables.env }}
      jobs:
      - job: Run_Entity_Framework_${{ env }}
        pool:
          vmImage: 'windows-latest' # This Job Must be Run on Windows
        displayName: Run Entity Framework ${{ env }}
        steps:
          - download: current
            displayName: Download Sql Artifact

          - ${{ if contains(env, 'Staging') }}: 
            - template: templates/Azure/Common/unlock-lock.yaml@azTemplates
              parameters:
                addOrDelete: delete
                lockName: "${{ variables.env }}-lock"
                resourceGroup: ${{ variables.vhResourceGroup }}
                azureSubscription: ${{ variables.subscriptionName }}

          - template: templates/Database/EntityFramework/run-entity-framework.yaml@azTemplates
            parameters:
              sqlServerResourceGroup: ${{ variables.vhResourceGroup }}
              sqlServerName: ${{ variables.vhSQLServerName }}
              databaseName: ${{ variables.BookingsApiDbName }}
              azureSubscription: ${{ variables.subscriptionName }}
              sqlScriptLocation: "$(Pipeline.Workspace)/${{ variables.efContextName }}-$(Build.BuildId)/${{ variables.efContextName }}.sql"
              kvfirewallRequired: false
              kvName: ${{ variables.vhKeyVault }}
              kvSqlPasswordSecret: ${{ variables.vhSqlPasswordSecret }}
              kvSqlUsernameSecret: ${{ variables.vhSqlUsernameSecret }}

          - ${{ if contains(env, 'Staging') }}: 
            - template: templates/Azure/Common/unlock-lock.yaml@azTemplates
              parameters:
                addOrDelete: add
                lockName: "${{ variables.env }}-lock"
                resourceGroup: ${{ variables.vhResourceGroup }}
                azureSubscription: ${{ variables.subscriptionName }}
                lockType: CanNotDelete