name: $(Date:yyyyMMddHHmm)-$(Rev:r)

trigger: none

pr: none

parameters:
- name: environments
  type: object
  default:
  - dev
  - test

resources:
  repositories:
    - repository: azTemplates
      type: github
      name: hmcts/azure-devops-templates
      ref: master
      endpoint: hmcts

pool: 
  vmImage: windows-latest

stages:
- stage: Generate_Entity_Framework
  displayName: "Generate Entity Framework"
  jobs:
  - job: Generate_Entity_Framework_Script
    variables:
    - template: variables/shared.yaml
    displayName: "Generate Entity Framework Script"
    steps:
      - template: templates/Database/EntityFramework/generate-script.yaml@azTemplates
        parameters:
          outputPath: $(Build.StagingDirectory)
          contextName: ${{ variables.efContextNameRefData }}
          workingPath: $(System.DefaultWorkingDirectory)/RefData
          migrationsPath: RefData/Migrations
          projectName: ${{ variables.efProjectNameRefData }}

- ${{each env in parameters.environments}}:
  - stage: Run_Entity_Framework_Script_${{ env }}
    dependsOn: Generate_Entity_Framework
    jobs:
    - job: Approve_EF_${{ env }}
      displayName: "Approve EF to ${{ env }}"
      pool: server
      timeoutInMinutes: 10080 # 7 Days
      steps:
      - task: ManualValidation@0
        timeoutInMinutes: 10080 # 7 Days
        inputs:
          instructions: 'Please Approve EF run to ${{ env }}'
          onTimeout: 'reject'
    - job: Run_Entity_Framework_RefData_Dev
      variables:
      - template: variables/shared.yaml
        parameters:
          env: ${{ env }}
      pool:
        vmImage: "windows-latest" # This Job Must be Run on Windows
      displayName: "Run Entity Framework Ref Data ${{ env }}"
      dependsOn: Approve_EF_${{ env }}
      steps:
      - download: current
        displayName: Download Sql Artifact
      - template: templates/Database/EntityFramework/run-entity-framework.yaml@azTemplates
        parameters:
          sqlServerResourceGroup: ${{ variables.vhResourceGroup }}
          sqlServerName: ${{ variables.vhSQLServerName }}
          databaseName: ${{ variables.BookingsApiDbName }}
          azureSubscription: ${{ variables.subscriptionName }}
          sqlScriptLocation: "$(Pipeline.Workspace)/${{ variables.efContextNameRefData }}-$(Build.BuildId)/${{ variables.efContextNameRefData }}.sql"
          kvfirewallRequired: false
          kvName: ${{ variables.vhKeyVault }}
          kvSqlPasswordSecret: ${{ variables.vhSqlPasswordSecret }}
          kvSqlUsernameSecret: ${{ variables.vhSqlUsernameSecret }}