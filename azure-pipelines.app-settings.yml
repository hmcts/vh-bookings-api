parameters:
  - name: PackageApp
    displayName: Package App
    type: boolean
    default: true
  
  - name: PackageACTests
    displayName: Package Acceptance Tests
    type: boolean
    default: true
  
  - name: PackageNuget
    displayName: Package Nuget Project
    type: boolean
    default: true
  
  - name: RunUnitTests
    displayName: Run Unit Tests
    type: boolean
    default: true
  
  - name: RunIntegTests
    displayName: Run Integration Tests
    type: boolean
    default: true
  
  - name: RunSonarCloudTests
    displayName: Run Sonar Cloud Analysis
    type: boolean
    default: true
  
  - name: RunMutationTests
    displayName: Run Mutation Tests
    type: boolean
    default: false
  
  - name: RunACTests
    displayName: Run Acceptance Tests
    type: boolean
    default: true

  - name: testSettings
    type: object
    default:
      - name: ApplicationInsights:InstrumentationKey
        value: vh-core-infra-AppInsightsKey
        secret: true
      - name: AzureAd:ClientId
        value: vh-bookings-api-appid
        secret: true
      - name: AzureAd:ClientSecret
        value: vh-bookings-api-key
        secret: true
      - name: AzureAd:TenantId
        value: tenantid
        secret: true
      - name: Testing:UsernameStem
        value: $(BookingsApiUsernameStem)
      - name: Services:BookingsApiResourceId
        value: vh-bookings-api-identifieruris
        secret: true
      - name: LaunchDarkly:SdkKey
        value: vh-admin-web-Feature-Toggle
        secret: true
      - name: UseServiceBusFake
        value: true

  - name: appSettings
    type: object
    default:
      - name: ApplicationInsights:InstrumentationKey
        value: vh-core-infra-AppInsightsKey
      - name: AzureAd:ClientId
        value: vh-bookings-api-appid
        secret: true
      - name: AzureAd:ClientSecret
        value: vh-bookings-api-key
        secret: true
      - name: AzureAd:TenantId
        value: tenantid
        secret: true
      - name: Services:BookingsApiResourceId
        value: vh-bookings-api-identifieruris
        secret: true
      - name: KinlyConfiguration:SipAddressStem
        value: $(SipAddressStem)
      # Connection strings
      - name: ConnectionStrings:VhBookings
        value: VhBookingsDatabaseConnectionString
        secret: true
      - name: ServiceBusQueue:ConnectionString
        value: AzureServiceBusConnectionStringSend
        secret: true
      # LaunchDarkly
      - name: LaunchDarkly:SdkKey
        value: vh-admin-web-Feature-Toggle
        secret: true
      # Feature Flags
      - name: FeatureFlags:StaffMemberFeature
        value: $(StaffMemberFeature)
      - name: FeatureFlags:EJudFeature
        value: $(EJudFeature)
  
variables:
  - group: vh-domains-and-urls
  - group: FeatureFlags_NonProd
  - group: vh-apps-settings-generic
  - group: vh-preview
  - group: vh-bookings-api
  - group: KinlyConfiguration_Test
  - ${{ each setting in parameters.testSettings }}:
      - ${{ if eq(setting.slot, true)}}:
        - name: "acDevSettings_azDeploymentSlotSetting_${{ setting.name }}"
          value: $[ dependencies.Secret_Gathering.outputs['SetSecretVariables.deployment_${{ setting.name }}'] ]
      - ${{ if ne(setting.slot, true)}}:
        - name: "acDevSettings_${{ setting.name }}"
          value: $[ dependencies.Secret_Gathering.outputs['SetSecretVariables._${{ setting.name }}'] ]
  - name: appPackagePath
    value: $(Pipeline.Workspace)/App/App.zip

trigger:
  branches:
    include:
    - master
    - release/*
    - hotfix/*
  
pr:
  branches:
    include:
    - master

resources:
  repositories:
    - repository: templates
      type: github
      name: hmcts/azure-devops-templates
      ref: refs/heads/master
      endpoint: hmcts
  containers:
  - container: dotnetsdk
    image: sspublicsbox.azurecr.io/vh/dotnet:3.1.102
    endpoint: sspublicsbox
  - container: dotnetsdk-cipipeline
    image: sspublicsbox.azurecr.io/vh/dotnet-cipipeline:3.1.102
    endpoint: sspublicsbox

stages:
  - stage: Test
    jobs: 
    - job:
      steps:    
      - pwsh: |
          $appsettings = @{}
          Get-ChildItem ENV: | Where-Object -FilterScript { $_.Name -cmatch "^acDevSettings_((|azDeploymentSlotSetting)(?!azActiveSlotSetting|azDeploymentSlotSetting)_?(.+))" } | Foreach-Object -Process {
            $appsettings[$matches[3]] = $_.value
          }

          $appSettings = $appSettings | ConvertTo-Json -Depth 99

          New-Item -Path $(Pipeline.Workspace)/AcceptanceTests -Name appsettings.Production.json -ItemType File -Value $appSettings -Force | Out-Null

          $runtimeSettings = '<?xml version="1.0" encoding="utf-8"?><RunSettings><TestRunParameters><Parameter name="TargetEnvironment" value="Production"/></TestRunParameters></RunSettings>'
          New-Item -Path $(Pipeline.Workspace)/AcceptanceTests -Name parameters.runsettings -ItemType File -Value $runtimeSettings -Force | Out-Null
          Get-Content  "$(Pipeline.Workspace)/AcceptanceTests/appsettings.Production.json"
      displayName: Set Environment Variables for Config Transform
      env:
      ${{ each setting in parameters.acSettings }}:
        ${{ if eq(setting.slot, true)}}:
          "acDevSettings_azDeploymentSlotSetting_${{ setting.name }}": $(acDevSettings_azDeploymentSlotSetting_${{ setting.name }})
        ${{ if ne(setting.slot, true)}}:
          "acDevSettings_${{ setting.name }}": $(acDevSettings_${{ setting.name }})
      ${{ if parameters.runZapTests }}:
        acDevSettings_ZapConfiguration.SetupProxy: true
        acDevSettings_ZapConfiguration.ApiAddress: localhost
        acDevSettings_ZapConfiguration.ApiPort: 8080

# extends:
#   template: stages\dotnet-package.yml@templates
#   parameters:
#     coreProjectPath: BookingsApi/BookingsApi
#     coreProjectName: BookingsApi.csproj
#     databaseContextName: BookingsDbContext
#     nugetProjectPath: BookingsApi/BookingsApi.Client
#     PackageNuget: ${{ parameters.PackageNuget }}
#     PackageApp: ${{ parameters.PackageApp }}
#     PackageAcceptanceTests: ${{ parameters.PackageACTests }}
#     Test: ${{ or(parameters.RunUnitTests, parameters.RunIntegTests, parameters.RunMutationTests) }}
#     connectionStringSecretName: "VhBookingsDatabaseConnectionString"
#     testParameters:
#       baseAgent: windows-latest
#       coreProjectPath: BookingsApi/BookingsApi
#       nugetConfigPath: BookingsApi
#       unitTestProjectPath: BookingsApi/BookingsApi.UnitTests
#       integTestProjectPath: BookingsApi/BookingsApi.IntegrationTests
#       secrets_KeyVault: $(pr_Secret_KeyVault)
#       secrets_Subscription: $(pr_Secret_Subscription)
#       RunUnitTests: ${{ parameters.RunUnitTests }}
#       RunIntegrationTests: ${{ parameters.RunIntegTests }}
#       RunSonarCloud: ${{ parameters.RunSonarCloudTests }}
#       RunStryker: ${{ parameters.RunMutationTests }}
#       IntegrationTestSettings:
#         - ${{ each setting in parameters.testSettings }}:
#           - name: ${{ setting.name }}
#             value: ${{ setting.value }}
#             secret: ${{ setting.secret }}
#             type: ${{ setting.type }}
#       variables:
#         - group: vh-bookings-api
#       coverletCoverageExclusions:
#         - "[BookingsApi.*Tests?]*"
#         - "[BookingsApi]Startup"
#         - "[*]BookingsApi.Common.*"
#         - "[Testing.Common]*"
#       sonarCloud_ExtraProperties: |
#         sonar.cs.opencover.reportsPaths=$(Common.TestResultsDirectory)\Coverage\coverage.opencover.xml
#         sonar.coverage.exclusions=**/BookingsApi.Contract/**,**/Bookings.API/Program.cs, **/Bookings.API/Startup.cs, **/Bookings.API/Extensions/**, **/Bookings.API/Swagger/**, **/Bookings.API/ConfigureServicesExtensions.cs, **/Testing.Common/**, **/Bookings.Common/**, **/Bookings.DAL/Mappings/**, **/Bookings.DAL/SeedData/**, **/Bookings.DAL/BookingsDbContext.cs, **/Bookings.DAL/**/DesignTimeHearingsContextFactory.cs, Bookings.DAL/Migrations/**, **/Bookings.Domain/Ddd/**, **/Bookings.DAL/Commands/Core/**, **/Bookings.DAL/Queries/Core/**, **/Testing.Common/**, **/Bookings.DAL/Migrations/*, **/Bookings.DAL/Migrations/**, **/Migrations/*
#         sonar.cpd.exclusions=**/Program.cs, **/Startup.cs, Bookings.DAL/Mappings/**, **/Bookings.DAL/Migrations/**, Bookings.DAL/Migrations/**, Bookings.DAL/Migrations/*, Bookings.DAL/Migrations/*.cs, Migrations/**, **/Migrations/*, **Migrations**, SeedData/**, DesignTimeHearingsContextFactory.cs, Ddd/**, Testing.Common/**, Bookings.API/ConfigureServicesExtensions.cs, Bookings.API/Extensions/**, Bookings.API/Swagger/**, Bookings.Common/**
#       StrykerBreak: 75
#     ACTest: ${{ parameters.RunACTests }}
#     releaseParameters:
#       environment: Preview
#       subscription: $(pr_Subscription)
#       secrets_KeyVault: $(pr_Secret_KeyVault)
#       secrets_Subscription: $(pr_Secret_Subscription)
#       devOpsResource: vh_bookings_api
#       appName: vh-bookings-api-$(environment)
#       resourceGroup: vh-bookings-api-$(environment)
#       appSettings: ${{ parameters.appSettings }}
#       variables:
#         - group: vh-bookings-api
#       acceptanceTestSettings:
#         - name: Services:BookingsApiUrl
#           value: $(bookings_api_url_staging)
#         - ${{ each setting in parameters.testSettings }}:
#           - name: ${{ setting.name }}
#             value: ${{ setting.value }}
#             secret: ${{ setting.secret }}