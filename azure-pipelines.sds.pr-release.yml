name: $(Date:yyyyMMddhhmmss)-$(Rev:.r)

resources:
  repositories:
    - repository: azTemplates
      type: github
      name: hmcts/azure-devops-templates
      ref: refs/heads/vh-qa-changes
      endpoint: hmcts

pr:
  - master

variables:
  - group: aks-cluster-info
  - group: vh-github-app-credentials

stages:
  - stage: Dock
    displayName: Build and Push Docker Image
    variables: 
      - group: aks-cluster-info
      - template: variables/dev.yaml
      - template: variables/shared.yaml
        parameters:
          env: ${{ variables.env }}
          cluster: $(cluster)
      - group: vh-github-app-credentials

    jobs:
    - job: Dock
      displayName: "Build and Push image ${{ variables.git_repo_name }}"
      steps:
        - checkout: self

        - template: templates\Containerisation\docker\docker-compose.yaml@azTemplates
          parameters:
            azureSubscription: ${{ variables.acrSubscription }}
            acrName: ${{ variables.acrName }}
            repositoryName:  ${{ variables.repositoryName }}

        - template: templates\Containerisation\docker\docker-push-azure.yaml@azTemplates
          parameters:
            azureSubscription: ${{ variables.acrSubscription }}
            acrName: ${{ variables.acrName }}
            repositoryName:  ${{ variables.repositoryName }}
            imageName: "${{ replace(variables.git_repo_name, '-', '') }}"
            imageTags:
              - '${{ parameters.prTagName }}'

  - stage: Install
    dependsOn: Dock
    displayName: Deploy Helm chart to Dev AKS
    variables:
      - template: variables/dev.yaml
      - template: variables/shared.yaml
        parameters:
          env: ${{ variables.env }}
          cluster: $(cluster)
      - name: dnsRecordName
        value: ${{ variables.git_repo_name }}-${{ variables.prTagName }}
    jobs:
      - job: aks_push
        displayName: Deploy to ${{ variables.clusterName }}
        steps:
          - template: templates/Containerisation/helm/helm-install.yaml@azTemplates
            parameters:
              privateKeyFileName: ${{ variables.gh_app_private_key_file_name }}
              appId: $(gh_app_app_id)
              envValuesTemplatePath: ${{ variables.envValuesTemplatePath }}
              envValuesPath: ${{ variables.envValuesPath }}
              acrName: ${{ variables.acrName }}
              repositoryName: ${{ variables.repositoryName }}
              prTagName: ${{ variables.prTagName }}
              dnsRecordName: ${{ variables.dnsRecordName }}
              dnsZone: ${{ variables.dnsZone }}
              env: ${{ variables.devEnv }}
              chartName: ${{ variables.chartName }}
              chartPath: ${{ variables.chartPath }}
              subscriptionName: "${{ variables.subscriptionName }}"
              aksResourceGroupName: "${{ variables.clusterResourceGroup }}"
              aksClusterName: "${{ variables.clusterName }}"
              dnsSubscriptionName: "${{ variables.dnsZoneSubscription }}"
              dnsResourceGroupName: "${{ variables.dnsZoneResourceGroup }}"  

  - stage: Wait
    jobs:
      - job: Wait
        displayName: "Approve for release to QA"
        pool: server
        steps:
          - task: ManualValidation@0
            timeoutInMinutes: 1440 # task times out in 1 day
            inputs:
              instructions: 'Please approve the release of PR-$(System.PullRequest.PullRequestNumber) to the QA environment to resume'
              onTimeout: 'reject'

  - stage: Install_Demo
    displayName: Deploy Helm chart to QA AKS
    variables:
      - template: variables/dev.yaml
      - template: variables/shared.yaml
        parameters:
          env: ${{ variables.env }}
          cluster: ${{ variables.cluster }}
      - name: dnsRecordName
        value: ${{ variables.git_repo_name }}-${{ variables.prTagName }}
    jobs:
      - job: aks_push
        displayName: Deploy to ${{ variables.clusterName }}
        steps:
        - template: templates/Containerisation/helm/helm-install.yaml@azTemplates
          parameters:
            privateKeyFileName: ${{ variables.gh_app_private_key_file_name }}
            appId: $(gh_app_app_id)
            envValuesTemplatePath: ${{ variables.envValuesTemplatePath }}
            envValuesPath: ${{ variables.envValuesPath }}
            acrName: ${{ variables.acrName }}
            repositoryName: ${{ variables.repositoryName }}
            prTagName: ${{ variables.prTagName }}
            dnsRecordName: ${{ variables.dnsRecordName }}
            dnsZone: ${{ variables.dnsZone }}
            env: ${{ variables.qaEnv }}
            chartName: ${{ variables.chartName }}
            chartPath: ${{ variables.chartPath }}
            subscriptionName: "${{ variables.subscriptionName }}"
            aksResourceGroupName: "${{ variables.clusterResourceGroup }}"
            aksClusterName: "${{ variables.clusterName }}"
            dnsSubscriptionName: "${{ variables.dnsZoneSubscription }}"
            dnsResourceGroupName: "${{ variables.dnsZoneResourceGroup }}"